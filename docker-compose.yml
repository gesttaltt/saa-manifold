version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saa-postgres
    environment:
      POSTGRES_USER: saa_user
      POSTGRES_PASSWORD: saa_password
      POSTGRES_DB: saa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saa_user -d saa_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: saa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: saa-backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://saa_user:saa_password@postgres:5432/saa_db
      REDIS_URL: redis://redis:6379
      API_HOST: 0.0.0.0
      API_PORT: 8000
      LOG_LEVEL: INFO
    volumes:
      - ./backend/src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: saa-frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api/v1
      VITE_WS_BASE_URL: ws://localhost:8000/ws
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend

  # nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: saa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: saa-network